/*
 * DukeCon API
 * Documentation of the DukeCon REST API.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.dukecon.android.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Keycloak
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-04-07T21:47:40.050+02:00[Europe/Berlin]")
public class Keycloak {
  public static final String SERIALIZED_NAME_REALM = "realm";
  @SerializedName(SERIALIZED_NAME_REALM)
  private String realm;

  public static final String SERIALIZED_NAME_AUTH_SERVER_URL = "auth-server-url";
  @SerializedName(SERIALIZED_NAME_AUTH_SERVER_URL)
  private String authServerUrl;

  public static final String SERIALIZED_NAME_SSL_REQUIRED = "ssl-required";
  @SerializedName(SERIALIZED_NAME_SSL_REQUIRED)
  private String sslRequired;

  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private String resource;

  public static final String SERIALIZED_NAME_REDIRECT_URI = "redirectUri";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URI)
  private String redirectUri;

  public static final String SERIALIZED_NAME_USE_ACCOUNT_MANAGEMENT = "useAccountManagement";
  @SerializedName(SERIALIZED_NAME_USE_ACCOUNT_MANAGEMENT)
  private String useAccountManagement;

  public Keycloak realm(String realm) {
    this.realm = realm;
    return this;
  }

   /**
   * Get realm
   * @return realm
  **/
  @ApiModelProperty(value = "")
  public String getRealm() {
    return realm;
  }

  public void setRealm(String realm) {
    this.realm = realm;
  }

  public Keycloak authServerUrl(String authServerUrl) {
    this.authServerUrl = authServerUrl;
    return this;
  }

   /**
   * Get authServerUrl
   * @return authServerUrl
  **/
  @ApiModelProperty(value = "")
  public String getAuthServerUrl() {
    return authServerUrl;
  }

  public void setAuthServerUrl(String authServerUrl) {
    this.authServerUrl = authServerUrl;
  }

  public Keycloak sslRequired(String sslRequired) {
    this.sslRequired = sslRequired;
    return this;
  }

   /**
   * Get sslRequired
   * @return sslRequired
  **/
  @ApiModelProperty(value = "")
  public String getSslRequired() {
    return sslRequired;
  }

  public void setSslRequired(String sslRequired) {
    this.sslRequired = sslRequired;
  }

  public Keycloak resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @ApiModelProperty(value = "")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public Keycloak redirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * Get redirectUri
   * @return redirectUri
  **/
  @ApiModelProperty(value = "")
  public String getRedirectUri() {
    return redirectUri;
  }

  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }

  public Keycloak useAccountManagement(String useAccountManagement) {
    this.useAccountManagement = useAccountManagement;
    return this;
  }

   /**
   * Get useAccountManagement
   * @return useAccountManagement
  **/
  @ApiModelProperty(value = "")
  public String getUseAccountManagement() {
    return useAccountManagement;
  }

  public void setUseAccountManagement(String useAccountManagement) {
    this.useAccountManagement = useAccountManagement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Keycloak keycloak = (Keycloak) o;
    return Objects.equals(this.realm, keycloak.realm) &&
        Objects.equals(this.authServerUrl, keycloak.authServerUrl) &&
        Objects.equals(this.sslRequired, keycloak.sslRequired) &&
        Objects.equals(this.resource, keycloak.resource) &&
        Objects.equals(this.redirectUri, keycloak.redirectUri) &&
        Objects.equals(this.useAccountManagement, keycloak.useAccountManagement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(realm, authServerUrl, sslRequired, resource, redirectUri, useAccountManagement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Keycloak {\n");
    
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    authServerUrl: ").append(toIndentedString(authServerUrl)).append("\n");
    sb.append("    sslRequired: ").append(toIndentedString(sslRequired)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    useAccountManagement: ").append(toIndentedString(useAccountManagement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

