plugins {
    id "io.spring.dependency-management"
}

apply from: "$rootDir/versions.gradle"

apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'kotlinx-serialization'


archivesBaseName = 'common-data'

// TODO work around https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}

kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation project(':common:domain')

                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common"

                implementation "io.ktor:ktor-client-core"
                implementation "io.ktor:ktor-client-json"
                implementation "io.ktor:ktor-client-logging"
            }
        }
        commonTest {
            dependencies {
                implementation deps.kotlin.test.common
                implementation deps.kotlin.test.annotations
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'

                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime'

                implementation 'io.ktor:ktor-client-core-jvm'
                implementation 'io.ktor:ktor-client-json-jvm'
                implementation 'io.ktor:ktor-client-logging-jvm'
            }
        }
        jvmTest {
            dependencies {
                implementation deps.kotlin.test.jdk
            }
        }
        iosMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native"

                implementation "io.ktor:ktor-client-ios"
                implementation "io.ktor:ktor-client-logging-native"
                implementation "io.ktor:ktor-client-core-native"
                implementation "io.ktor:ktor-client-json-native"
            }
        }
    }

    targets {
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos")  \
                           ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'ios') {
            binaries {
                framework {
                    baseName = 'commonClient'
                }
            }
        }

        fromPreset(presets.jvm, 'jvm')
    }
}